<?php

return [
    "Running Hadoop inside Docker provides consistent environments for local development and testing.",
    "Each Hadoop daemon like NameNode, DataNode, ResourceManager runs in its own container.",
    "Use Docker Compose to orchestrate multiple Hadoop containers easily.",
    "Volume mounting is crucial to persist HDFS data across container restarts.",
    "Networking in Docker helps containers talk to each other like a real cluster.",
    "Base your image on Ubuntu or Alpine with Java and Hadoop preinstalled.",
    "Use supervisord or bash scripts to launch multiple daemons inside one container for simplicity.",
    "Tag your Docker image versions to track changes and manage upgrades.",
    "Avoid using `latest` tag in production Dockerfiles.",
    "Map container ports for web UIs like ResourceManager on 8088 and NameNode on 9870.",
    "Docker can help simulate network delays using `tc` command for performance testing.",
    "Use `docker exec` to run HDFS commands in a running container.",
    "Make your container stateless where possible — store logs externally.",
    "Bind hostnames in your Docker Compose to replicate a real cluster setup.",
    "Document container internals — entrypoint scripts, logs, config paths, etc.",
    "Use environment variables in Dockerfiles for flexible Hadoop configuration.",
    "Don't run containers as root — use a Hadoop-specific user inside the image.",
    "Split config files like `core-site.xml` and `hdfs-site.xml` into a shared volume.",
    "Track your container logs with a centralized log collector like Fluentd or Filebeat.",
    "Use health checks in Docker Compose to confirm services are ready.",
    "Consider Minikube or Kubernetes if Docker Compose feels limiting for orchestration.",
    "Benchmark your Dockerized Hadoop with small data before deploying bigger pipelines.",
    "Mount a host directory into HDFS image for input/output testing.",
    "Keep your container images slim by cleaning up temp files after build.",
    "Use Docker secrets for secure configuration of access tokens or credentials.",
    "Define dependencies between Hadoop services using `depends_on` in Compose.",
    "Automate setup with `docker-compose up --build` and helper scripts.",
    "Separate test vs production Compose files with override technique.",
    "Always include a `README.md` with Docker instructions for team onboarding.",
    "Use `docker stats` to monitor resource usage per container in real-time.",
    "Limit memory and CPU per container for stress testing your pipeline.",
    "Be cautious of version mismatches between Hadoop and Java.",
    "Use `docker network inspect` to debug container interconnectivity issues.",
    "Add an interactive container for debugging via `docker exec -it` and bash.",
    "Use `.dockerignore` to speed up builds by excluding unneeded files.",
    "Tag logs and metrics by container for observability integration.",
    "Auto-remove exited containers with `--rm` to avoid clutter.",
    "Use named volumes instead of anonymous ones for clarity.",
    "Avoid building your own Hadoop image unless necessary — use trusted bases.",
    "Test everything locally before pushing your Docker Hadoop config to CI/CD.",
];