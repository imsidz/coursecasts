<?php

return [
    [
        'body' => 'Tuning Hadoop performance starts with understanding the bottlenecks in your MapReduce job.',
        'visible' => true,
        'created_at' => '2025-06-02 11:09:00',
        'updated_at' => '2025-06-02 11:09:00',
    ],
    [
        'body' => 'Use the Hadoop Job History Server to analyze slow-running jobs.',
        'visible' => true,
        'created_at' => '2025-06-02 09:13:00',
        'updated_at' => '2025-06-02 09:13:00',
    ],
    [
        'body' => 'Adjusting the number of mappers and reducers can drastically affect performance.',
        'visible' => true,
        'created_at' => '2025-06-02 07:21:00',
        'updated_at' => '2025-06-02 07:21:00',
    ],
    [
        'body' => 'Compression can reduce I/O costs in MapReduce jobs. Try enabling it.',
        'visible' => true,
        'created_at' => '2025-06-02 14:50:00',
        'updated_at' => '2025-06-02 14:50:00',
    ],
    [
        'body' => 'Tune your JVM heap size for better performance during shuffle and sort phases.',
        'visible' => true,
        'created_at' => '2025-06-02 20:21:00',
        'updated_at' => '2025-06-02 20:21:00',
    ],
    [
        'body' => 'Locality of data matters. Keep your data close to computation whenever possible.',
        'visible' => true,
        'created_at' => '2025-06-02 15:06:00',
        'updated_at' => '2025-06-02 15:06:00',
    ],
    [
        'body' => 'Avoid small files—they can slow down Hadoop significantly.',
        'visible' => true,
        'created_at' => '2025-06-02 01:57:00',
        'updated_at' => '2025-06-02 01:57:00',
    ],
    [
        'body' => 'Map-side joins are more efficient than reduce-side joins. Use them if your data allows.',
        'visible' => false,
        'created_at' => '2025-06-02 20:20:00',
        'updated_at' => '2025-06-02 20:20:00',
    ],
    [
        'body' => 'Tweak the io.sort.mb and io.sort.spill.percent configs for shuffle efficiency.',
        'visible' => false,
        'created_at' => '2025-06-02 11:56:00',
        'updated_at' => '2025-06-02 11:56:00',
    ],
    [
        'body' => 'Enable speculative execution cautiously—it can help or hurt depending on your cluster.',
        'visible' => false,
        'created_at' => '2025-06-02 17:56:00',
        'updated_at' => '2025-06-02 17:56:00',
    ],
    [
        'body' => 'Monitoring memory usage for map and reduce tasks can prevent job failures.',
        'visible' => false,
        'created_at' => '2025-06-02 11:14:00',
        'updated_at' => '2025-06-02 11:14:00',
    ],
    [
        'body' => 'Use counters to measure custom metrics and detect job inefficiencies.',
        'visible' => false,
        'created_at' => '2025-06-02 02:46:00',
        'updated_at' => '2025-06-02 02:46:00',
    ],
    [
        'body' => 'Avoid unnecessary data transformations. Keep your MapReduce logic clean.',
        'visible' => false,
        'created_at' => '2025-06-02 22:25:00',
        'updated_at' => '2025-06-02 22:25:00',
    ],
    [
        'body' => 'Tune the number of concurrent tasks per node for optimal resource utilization.',
        'visible' => false,
        'created_at' => '2025-06-02 22:05:00',
        'updated_at' => '2025-06-02 22:05:00',
    ],
    [
        'body' => 'YARN container memory settings can make or break your job’s stability.',
        'visible' => false,
        'created_at' => '2025-06-02 00:07:00',
        'updated_at' => '2025-06-02 00:07:00',
    ],
    [
        'body' => 'When processing large files, adjust split size to balance task loads.',
        'visible' => false,
        'created_at' => '2025-06-02 15:59:00',
        'updated_at' => '2025-06-02 15:59:00',
    ],
    [
        'body' => 'Investigate failed tasks for configuration issues or bad records.',
        'visible' => false,
        'created_at' => '2025-06-02 08:31:00',
        'updated_at' => '2025-06-02 08:31:00',
    ],
    [
        'body' => 'Compress intermediate outputs for faster shuffling.',
        'visible' => false,
        'created_at' => '2025-06-02 03:49:00',
        'updated_at' => '2025-06-02 03:49:00',
    ],
    [
        'body' => 'If reducers are idle, consider reducing their number to balance cluster usage.',
        'visible' => false,
        'created_at' => '2025-06-02 08:38:00',
        'updated_at' => '2025-06-02 08:38:00',
    ],
    [
        'body' => 'Review your shuffle and sort phase—most bottlenecks appear here.',
        'visible' => false,
        'created_at' => '2025-06-02 23:27:00',
        'updated_at' => '2025-06-02 23:27:00',
    ],
    [
        'body' => 'Use combiner functions to reduce the amount of data transferred between map and reduce.',
        'visible' => false,
        'created_at' => '2025-06-02 13:19:00',
        'updated_at' => '2025-06-02 13:19:00',
    ],
    [
        'body' => 'Don’t overlook garbage collection tuning on your Hadoop nodes.',
        'visible' => false,
        'created_at' => '2025-06-02 00:46:00',
        'updated_at' => '2025-06-02 00:46:00',
    ],
    [
        'body' => 'Use FileInputFormat.setMinInputSplitSize to fine-tune input splits.',
        'visible' => false,
        'created_at' => '2025-06-02 04:48:00',
        'updated_at' => '2025-06-02 04:48:00',
    ],
    [
        'body' => 'High network I/O? Consider increasing sort buffer size.',
        'visible' => false,
        'created_at' => '2025-06-02 10:24:00',
        'updated_at' => '2025-06-02 10:24:00',
    ],
    [
        'body' => 'Add more task trackers to scale horizontally when CPU is the bottleneck.',
        'visible' => false,
        'created_at' => '2025-06-02 10:54:00',
        'updated_at' => '2025-06-02 10:54:00',
    ],
    [
        'body' => 'Disable speculative execution for predictable workloads.',
        'visible' => false,
        'created_at' => '2025-06-02 09:09:00',
        'updated_at' => '2025-06-02 09:09:00',
    ],
    [
        'body' => 'Use distributed cache to share read-only data efficiently.',
        'visible' => false,
        'created_at' => '2025-06-02 17:27:00',
        'updated_at' => '2025-06-02 17:27:00',
    ],
    [
        'body' => 'Track skew in data distribution across reducers to avoid long tails.',
        'visible' => false,
        'created_at' => '2025-06-02 18:50:00',
        'updated_at' => '2025-06-02 18:50:00',
    ],
    [
        'body' => 'Combine related jobs into a single pipeline to save I/O.',
        'visible' => false,
        'created_at' => '2025-06-02 19:13:00',
        'updated_at' => '2025-06-02 19:13:00',
    ],
    [
        'body' => 'Cache frequent data in HDFS memory tier.',
        'visible' => false,
        'created_at' => '2025-06-02 01:49:00',
        'updated_at' => '2025-06-02 01:49:00',
    ],
    [
        'body' => 'Balance your data blocks evenly across your HDFS nodes.',
        'visible' => false,
        'created_at' => '2025-06-02 15:12:00',
        'updated_at' => '2025-06-02 15:12:00',
    ],
    [
        'body' => 'Always use compression libraries like Snappy or BZip2 for large datasets.',
        'visible' => false,
        'created_at' => '2025-06-02 22:16:00',
        'updated_at' => '2025-06-02 22:16:00',
    ],
    [
        'body' => 'Ensure your input formats are well-structured and avoid malformed data.',
        'visible' => false,
        'created_at' => '2025-06-02 07:57:00',
        'updated_at' => '2025-06-02 07:57:00',
    ],
    [
        'body' => 'Validate configuration changes incrementally, not all at once.',
        'visible' => false,
        'created_at' => '2025-06-02 10:16:00',
        'updated_at' => '2025-06-02 10:16:00',
    ],
    [
        'body' => 'Try chaining multiple mappers if the logic allows it.',
        'visible' => false,
        'created_at' => '2025-06-02 04:44:00',
        'updated_at' => '2025-06-02 04:44:00',
    ],
    [
        'body' => 'Prioritize reducing disk I/O over CPU if working with large files.',
        'visible' => false,
        'created_at' => '2025-06-02 06:12:00',
        'updated_at' => '2025-06-02 06:12:00',
    ],
    [
        'body' => 'Use Hadoop Metrics2 to get fine-grained insights.',
        'visible' => false,
        'created_at' => '2025-06-02 19:00:00',
        'updated_at' => '2025-06-02 19:00:00',
    ],
    [
        'body' => 'Group your records smartly for reduce tasks to avoid overloading one reducer.',
        'visible' => false,
        'created_at' => '2025-06-02 18:16:00',
        'updated_at' => '2025-06-02 18:16:00',
    ],
    [
        'body' => 'Leverage combiners early to reduce intermediate output size.',
        'visible' => false,
        'created_at' => '2025-06-02 12:37:00',
        'updated_at' => '2025-06-02 12:37:00',
    ],
    [
        'body' => 'Benchmark small test jobs before running on full data sets.',
        'visible' => false,
        'created_at' => '2025-06-02 03:26:00',
        'updated_at' => '2025-06-02 03:26:00',
    ],
];