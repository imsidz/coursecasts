<?php

return [
    'Increase heap size for tasks cautiously—don’t starve other processes.',
    'Sort data early to reduce shuffling needs.',
    'YARN memory allocation tuning is critical for large jobs.',
    'Enable compression for map outputs to reduce I/O load.',
    'YARN memory allocation tuning is critical for large jobs.',
    'Use partitioning and bucketing for faster Hive-on-MapReduce queries.',
    'Speculative execution can help but might waste resources if not tuned.',
    'Compress input data using splittable formats like bzip2.',
    'MapReduce performance suffers when there are too many small files.',
    'Use counters and logs to identify slow tasks or stragglers.',
    'Avoid using default values in production—customize for your workload.',
    'Speculative execution can help but might waste resources if not tuned.',
    'Speculative execution can help but might waste resources if not tuned.',
    'Enable compression for map outputs to reduce I/O load.',
    'Sort data early to reduce shuffling needs.',
    'Sort data early to reduce shuffling needs.',
    'Job history server is useful for retrospective performance analysis.',
    'YARN memory allocation tuning is critical for large jobs.',
    'Reduce job startup time by minimizing jar and classpath sizes.',
    'Use counters and logs to identify slow tasks or stragglers.',
    'Data locality is important—try to run tasks where data resides.',
    'YARN memory allocation tuning is critical for large jobs.',
    'Speculative execution can help but might waste resources if not tuned.',
    'YARN memory allocation tuning is critical for large jobs.',
    'Speculative execution can help but might waste resources if not tuned.',
    'Increase heap size for tasks cautiously—don’t starve other processes.',
    'MapReduce performance suffers when there are too many small files.',
    'Using Combiners can reduce the amount of data shuffled between map and reduce phases.',
    'MapReduce performance suffers when there are too many small files.',
    'Sort data early to reduce shuffling needs.',
    'Use counters and logs to identify slow tasks or stragglers.',
    'Enable compression for map outputs to reduce I/O load.',
    'HDFS disk throughput is a bottleneck—use SSDs where possible.',
    'Optimizing block size can greatly affect performance in Hadoop.',
    'Data locality is important—try to run tasks where data resides.',
    'Compress input data using splittable formats like bzip2.',
    'Speculative execution can help but might waste resources if not tuned.',
    'Using Combiners can reduce the amount of data shuffled between map and reduce phases.',
    'Sort data early to reduce shuffling needs.',
    'Monitor garbage collection times to identify memory inefficiencies.',
];