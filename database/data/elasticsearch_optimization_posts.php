<?php

return [
    "Use filters instead of queries when you don't need scoring — they’re faster and cacheable.",
    "Avoid wildcard queries when possible; they're expensive to run.",
    "Prefer keyword fields for exact matching to avoid analysis overhead.",
    "Limit the fields returned using `_source` filtering to reduce payload.",
    "Use the `term` query for precise value matching — it’s cheaper than `match`.",
    "Paginate with `search_after` instead of `from` for deep pagination.",
    "Avoid large result sets — use `size` wisely or scroll APIs.",
    "Index only what you need — too many fields increase disk and query load.",
    "Use bulk indexing to improve throughput during ingestion.",
    "Profile your queries with `_profile` to see where time is spent.",
    "Avoid nested fields unless truly needed; they add query complexity.",
    "Combine filters using `bool` instead of chaining multiple queries.",
    "Use doc values on keyword fields to enable fast sorting and aggregation.",
    "Use `index: false` on fields you don’t query to reduce index size.",
    "Keep mapping clean and avoid unnecessary dynamic fields.",
    "Analyze slow queries with the slow logs or hot threads API.",
    "Upgrade to recent Elasticsearch versions — performance improves with releases.",
    "Avoid using `_all` fields — they’re deprecated and inefficient.",
    "Test queries with realistic data volume in staging environments.",
    "Avoid high cardinality fields in aggregations — they’re memory intensive.",
    "Use `match_phrase` over `match` for exact sequence matching.",
    "Use aliases and index templates to simplify multi-index operations.",
    "Avoid scripted fields unless needed — they’re slower than native fields.",
    "Tune JVM heap size — 50% of system RAM, but not more than 30GB.",
    "Avoid running aggregations on text fields — use keyword versions instead.",
    "Minimize updates — document rewrites are expensive in Lucene.",
    "Compress mappings with short field names if you're tight on disk.",
    "Keep shards balanced and avoid too many small shards.",
    "Disable `_source` storage for write-heavy logs if you never read them.",
    "Use hot-warm architecture: fast nodes for recent data, slow nodes for archived.",
    "Monitor heap usage and garbage collection frequently in production.",
    "Use dedicated ingest nodes to separate processing from search traffic.",
    "Avoid multi-index queries unless absolutely needed.",
    "Leverage `terms` lookup by ID if you need to filter by large value lists.",
    "Track query performance with Kibana or Elastic APM.",
    "Disable fielddata on text fields to avoid accidental memory blowups.",
    "Denormalize data where it improves search and filter performance.",
    "Pin important documents in search results using rank features.",
    "Read Elasticsearch blog — they share great optimization tips!",
];
